<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapperInterface.BoardMapper">
	
<!-- ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  
** interface 를 통해 ..~Mapper 접근
=> interface ..~Mapper.java 의 패키지명 & 화일명과  
   ..~Mapper.xml 의 패키지명 & 화일명 & namespace 값은 같아야됨. 
   
=> namespace: 자바클래스에서 mapper를 찾는 경로
           다른 mapper와 중복되지 않도록 네임스페이스 기재   

*** mapper 기본문법 
1) #{id} : parameter 로 전달된 dto 의 id 라는 컬럼의 value 가 전달됨  
         -> getId() 로 처리함, Map의 경우 키값이 id 인 값을 찾음.
          
2) ${id} : 필드를 표현 (매개변수로 전달된 객체의 id 컬럼의 값을 table의 컬럼으로 인식하고 적용함)    
         
3) CDATA : XML에서는  <,>등 비교연산자의 경우 XML규칙상 에러 나기 때문에,
         이 기호를 연산자로 인식하도록 하기 위해서는 SQL문을 CDATA로 묶어 주어야 한다.
         
         <![CDATA[ SELECT * FROM table WHERE jno < 5 ]]>
         
4) 조건문, 반복문, sql, include, selectKey 등
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ -->
	
	
	
	<!-- 1. selectList  -->
	<select id="selectList" resultType="com.ncs.spring02.domain.BoardDTO">
		SELECT * FROM board ORDER BY root DESC, step ASC
	</select>
	
	<!-- 2. selectOne -->
	<select id="selectOne" resultType="com.ncs.spring02.domain.BoardDTO">
		SELECT * FROM board WHERE seq = #{seq}
	</select>
	
	<!-- ** selectKey Test 
=> AutoNumbering 을 편리하게 할 수 있도록 지원
=> DB작업중 먼저 어떤 키값을 가져와서 증가시켜서 입력하거나 혹은 입력후에 증가된 키값을 가져올 필요가 있을때마다.
   selectKey Tag를 이용하면 별도의 쿼리로직 없이 해당 메소드에서 일괄처리할 수가 있음.
   - keyProperty: selectKey구문의 결과가 셋팅될 대상을 지정
               ( 즉, 매개변수로 전달된 dto의 컬럼중 결과가 셋팅될 컬럼 선택 )     
   - resultType: 결과의 타입.
   - order: BEFORE 또는 AFTER
            BEFORE로 설정하면 키를 먼저 조회하고 그 값을 keyProperty 에 셋팅한 뒤 insert 구문실행.
            AFTER로 설정하면 insert 구문을 실행한 뒤 selectKey 구문 실행.
            오라클에서는 insert구문 내부에서 일관된 호출형태로 처리한다.
   - statementType: STATEMENT, PREPARED 또는 CALLABLE중 하나 선택가능.
           마이바티스에게 Statement, PreparedStatement 또는 CallableStatement를 사용하게 한다.
           디폴트는 PREPARED.
     
=> Oracle 의 경우:  (select nvl(max(seq),0)+1 from board) -->  


	<!-- 3. insert1: 원글입력
  	=> seq 와 root 동일, cnt=0, step=0, indent=0 -->
	<insert id="insert">
		<!-- INSERT INTO board(seq, id, title, content, root ) VALUES (
		( SELECT * FROM (
		SELECT ifNull(max(seq),0)+1 FROM board) AS temp ) 
		, ?, ?, ?, CURRENT_TIMESTAMP, 0
		, ( SELECT * FROM (SELECT ifNull(max(seq),0)+1 FROM board) AS temp ) 
		, 0, 0 ) -->
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(seq), 0)+1 FROM board
		</selectKey>
		INSERT INTO board(seq, id, title, content, root ) VALUES (
		#{seq}, #{id}, #{title}, #{content}, #{seq} )
	</insert>
	
	<!-- 4. insert2: 답글입력 
	=> seq 자동생성, root, step, indent 는 dto로 전달, cnt=0
	=> 성공후 stepUpdate 실행	-->
	<insert id="rinsert">
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(seq), 0)+1 FROM board
		</selectKey>
		INSERT INTO board(seq, id, title, content, root, step, indent) VALUES (
		#{seq}, #{id}, #{title}, #{content}, #{root}, #{step}, #{indent})
	</insert>
	
	<!-- 5. stepUpdate : step 값 증가 
	=> 조건 : root 동일 and step >= and 직전에 입력된 새글은 제외
		UPDATE board SET step = step+1 WHERE root=? AND step >= ? AND seq <> ( SELECT * FROM (SELECT ifNull(max(seq),0) FROM board) AS temp )
	-->
	<update id="stepUpdate">
		<selectKey keyProperty="seq" resultType="int" order="BEFORE">
			SELECT IFNULL(MAX(seq), 0) FROM board
		</selectKey>
		UPDATE board SET step = step+1
		WHERE root = #{root} AND step >= #{step} AND seq != #{seq}
	</update>
	
	<!-- 6. update -->
	<update id="update">
		UPDATE board 
		SET title = #{title} , content = #{content} , cnt = #{cnt} WHERE seq = #{seq}
	</update>
	
	<!-- 7. delete 
		=> 원글 (seq == root) : ~ WHERE root =? (모든 답글도 동시에 삭제)
		=> 답글 (seq != root) : ~ WHERE seq =? 
	-->
	<delete id="delete">
		DELETE FROM board WHERE
		<if test="seq == root">root=</if>
		<!-- 원글삭제: 동일 root 자료 모두 삭제 -->
		<if test="seq != root">seq=</if>
		<!-- 해당 답글만 삭제 -->
		#{seq}
	</delete>
	
<!-- 	** Board Pageing
	=> MySql : Limit a, b(a개를 제외하고 b개 : a+1 부터 b 개 까지)
	=> Oracle : BETWEEN a AND b (a 번째부터 b까지) -->
	<select id="bPageList" resultType="com.ncs.spring02.domain.BoardDTO">
		SELECT * FROM board 
		ORDER BY root DESC, step ASC 
		LIMIT #{sno}, #{rowsPerPage}
	</select>
	
	<select id="totalRowsCount" resultType="int">
		SELECT COUNT(*) FROM board
	</select>

</mapper>