<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- Mybatis 설정을 하기전 밑에 태그중 Namespaces 에서 Mybatis 체크 되어있는지 확인.
		체크 하게될 경우 위에 xmlns:과 xsi:schemaLocation 에 Mybatis 가 추가가 될 것임.
	 -->
	
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- 스프링 시큐리티 라이브러리 BCryptPasswordEncoder -->
	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- ** Mybatis 설정 : interface 방식, root-context 에 설정 *********  
      => DAO 에서의 sql 구문을 xml (Mapper) 로 처리
      => DB_Connection, Mybatis 설정
      
      우리가 DB Connection 클래스에서 DB와 연동하는 부분을 bean을 만들어서 자동으로 연동시켜줌
      그에 필요한 mysql 주소와 localhost번호 유저아이디 pw 등 정보를 property 로 setter 주입 해줘야함 
      1) DB_Connection     -->      
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
    	<property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
    	<property name="url" value="jdbc:mysql://localhost:3306/mydb?useSSL=false&amp;serverTimezone=UTC&amp;allowPublicKeyRetrieval=true" />
    	<property name="username" value="root" />
    	<property name="password" value="mysqlmysql" />
    </bean>
	<!--
    2) Mybatis 설정 
         -> sqlSessionFactory bean 설정 
         -> interface 의 위치_package 등록  -->   
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<mybatis-spring:scan base-package="mapperInterface" />
	<!-- ******************* mybatis 설정 ******************-->
	
	
	<!-- JUnit Test
		=> SpringDAO Test Bean 설정 : MemberDAO, MemberDTO --> 
<!-- 	<bean class="com.ncs.spring02.model.MemberDAO" lazy-init="true" />
	<bean class="com.ncs.spring02.domain.MemberDTO" lazy-init="true" /> -->
	
	
	
</beans>
